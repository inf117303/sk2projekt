Komunikator typu GG
Protokół komunikacyjny

=== Podstawowe informacje techniczne ===
Serwer oraz klient ustanawiaja połączenie i komunikują się na porcie 5501. Komunikacja odbywa się za pomocą wymiany łańcuchów tekstowych (string). Przesyłane dane są sformatowane jako JSON.

=== Rejestracja nowego użytkownika ===
Serwer nasłuchuje nowych rejestracji. Klient wysyła do serwera żądanie uzyskania nowego numeru użytkownika oraz załącza wybrane hasło.
{ "recipient": 0, "sender": null, "type": "registration_request", "content": "WYBRANE_HASŁO" }
Serwer posiada tablicę zajętych numerów oraz przypisanych im haseł i przydziela kolejny dostępny. Informacja o zarejestrowanych użytkownikach trzymana jest w zewnętrznym pliku tekstowym. Serwer posiada specjalny numer użytkownika 0, klienci od 1 w górę. Zwrotnie serwer wysyła do klienta informację o udanej rejestracji oraz nadany numer użytkownika.
{ "recipient": null, "sender": 0, "type": "registration_success", "content": NOWY_NUMER }

=== Logowanie użytkownika ===
Użytkownik, który jest już zarejestrowany może się zalogować. W tym celu przesyła do serwera komunikat z numerem i hasłem.
{ "recipient": 0, "sender": NUMER_UŻYTKOWNIKA, "type": "login_request", "content": "HASŁO_UŻYTKOWNIKA" }
Serwer sprawdza, czy dany numer istnieje oraz czy hasło jest zgodne z zapisanym. Następnie przesyła do klienta stosowną informację zwrotną:
{ "recipient": NUMER_UŻYTKOWNIKA, "sender": 0, "type": "login_success", "content": null }
{ "recipient": NUMER_UŻYTKOWNIKA, "sender": 0, "type": "login_failed", "content": "OPIS_BŁEDU" }

=== Rozmowa ===
Serwer i klient (klienci) nasłuchują wiadomości. Klient wysyła do serwera wiadomość jako łańcuch tekstowy (string) w formacie JSON. Komunikat ten zawiera numer nadawcy, właściwą wiadomość oraz numer odbiorcy.
{ "recipient": NUMER_ODBIORCY, "sender": NUMER_NADAWCY, "type": "message", "content": "TREŚĆ_WIADOMOŚCI" }
Serwer sprawdza, czy nadawca jest zalogowany, następnie czy odbiorca istnieje i jest zalogowany. Jeśli wszystkie testy wypadną pomyślnie, wiadomość jest przekazywana do odbiorcy.
{ "recipient": NUMER_ODBIORCY, "sender": NUMER_NADAWCY, "type": "message", "content": "TREŚĆ_WIADOMOŚCI" }
W przeciwnym razie nadawca otrzymuje komunikat o błędzie.
{ "recipient": NUMER_NADAWCY, "sender": 0, "type": "error", "content": "OPIS_BŁĘDU" }